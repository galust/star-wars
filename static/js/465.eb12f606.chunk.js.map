{"version":3,"file":"static/js/465.eb12f606.chunk.js","mappings":"oPAyCA,EA5BsC,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SASrC,OACI,SAACC,EAAA,EAAD,CACIC,UAAU,OACVC,YAAU,EACVC,aAAa,MACbC,UAAU,SACVC,GAAI,CAAEC,QAAS,OAAQC,eAAgB,UAL3C,UAOI,SAACC,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,MAAM,YACNC,SArBS,SAACC,GAClBC,aAJJC,WAKIC,YAAW,WACiB,oBAAblB,GACPA,EAASe,EAAMI,OAAOC,MAE7B,GAAE,IACN,KAkBJ,E,qECGD,EA1BuC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChCC,GAAWC,EAAAA,EAAAA,MACXb,EAAkBW,EAAKG,ICjBlBC,QAAQ,UAAW,IDqB9B,OACI,SAAC,IAAD,CAASpB,UAAU,OAAOC,GAAI,CAAEoB,aAAc,QAAUC,QAJxC,WAChBL,EAAS,cAAD,OAAeZ,GAAM,CAAEe,SAAS,GAC3C,EAEG,UACI,SAACG,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,CAAaxB,UAAU,cAAcC,GAAI,CAAEwB,cAAe,UAA1D,WACI,gBAAKzB,UAAU,cAAf,UACI,gBACI0B,IAAG,iEAA4DrB,EAA5D,QACHsB,IAAKX,EAAKY,KACVC,MAAOb,EAAKY,UAGpB,SAACE,EAAA,EAAD,CAAY9B,UAAU,aAAa+B,GAAI,EAAGC,cAAY,EAAtD,SACKhB,EAAKY,aAM7B,E,UEXD,EAvB+B,WAG3B,OACI,SAAChC,EAAA,EAAD,CAAKI,UAAU,sBAAf,UACI,SAACiC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SAJM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAKvBC,KAAI,SAACC,GACR,OACI,SAACJ,EAAA,GAAD,CAAMjB,MAAI,EAAasB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAjD,UACI,SAACC,EAAA,EAAD,CACInC,QAAQ,cACRoC,MAAM,OACNC,OAAQ,IACR3C,GAAI,CAAEoB,aAAc,WALZgB,EASvB,OAIhB,ECUD,EAxBuB,WACnB,IAAMQ,GAAYC,EAAAA,EAAAA,GAAeC,EAAAA,EAAAA,eAC3BC,GAAaF,EAAAA,EAAAA,GAAeC,EAAAA,EAAAA,kBAClC,OACI,SAACnD,EAAA,EAAD,CAAKI,UAAU,kBAAkBiD,UAAU,MAAMC,GAAI,CAAC,EAAG,EAAG,EAAG,GAA/D,SACKL,IAAcG,GACX,SAAC,EAAD,IACCA,EAAWG,QAGZ,SAAClB,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACKa,EAAWZ,KAAI,SAACpB,GACb,OACI,SAACiB,EAAA,GAAD,CAAMjB,MAAI,EAAiBsB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAArD,UACI,SAAC,EAAD,CAAMzB,KAAMA,KADAA,EAAKY,KAI5B,OATL,gBAAK5B,UAAU,uBAAf,qCAcf,E,mBCjCD,ECa8C,SAAC,GAA4B,IAAD,IAAzBoD,KAAAA,OAAyB,MAAlB,EAAkB,EAAfzD,EAAe,EAAfA,SACjD0D,GAAYP,EAAAA,EAAAA,GAAeC,EAAAA,EAAAA,aAEjC,IAAKM,EAAW,OAAO,KAMvB,OACI,SAACzD,EAAA,EAAD,CAAKK,GAAI,CAAEC,QAAS,OAAQC,eAAgB,YAA5C,UACI,SAAC,IAAD,CACIiD,KAAMA,EACN3C,SARS,SAACC,EAAmC0C,GACrDzD,EAASyD,EACZ,EAOWE,MAAOC,KAAKC,KAAKH,EAAYI,EAAAA,MAI5C,ECAD,EAtB6B,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAON,EAAP,KAAaO,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,EAAAA,EAAAA,YAAU,WACNF,GAASG,EAAAA,EAAAA,IAAgB,CAAEb,KAAMA,EAAMQ,OAAQA,IAClD,GAAE,CAACE,EAAUV,EAAMQ,IAOpB,OACI,UAACM,EAAA,EAAD,CAAWC,SAAS,KAApB,WACI,SAAC,EAAD,CAAQxE,SAPK,SAACyE,GAClBP,EAAUO,GACVT,EAAQ,EACX,KAKO,SAAC,EAAD,KACA,SAAC,EAAD,CAAYP,KAAMA,EAAMzD,SAAUgE,MAG7C,C,4FC5BYI,EAAoCM,EAAAA,GACpCvB,EAAkDwB,EAAAA,E","sources":["components/Search/Search.tsx","pages/Characters/Card.tsx","utils/helper.ts","pages/Characters/CardSkeleton.tsx","pages/Characters/CharactersList.tsx","components/Pagination/index.tsx","components/Pagination/Pagination.tsx","pages/Characters/Characters.tsx","redux/hooks.ts"],"sourcesContent":["import React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport { TextField } from '@mui/material';\r\n\r\nimport './../../pages/InnerPage/InnerPage.scss';\r\n\r\ninterface SearchProps {\r\n    callback?: (str: string) => void;\r\n}\r\n\r\nlet timerFunction: number;\r\n\r\nconst Search: React.FC<SearchProps> = ({ callback }) => {\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        clearTimeout(timerFunction);\r\n        setTimeout(() => {\r\n            if (typeof callback === 'function') {\r\n                callback(event.target.value);\r\n            }\r\n        }, 700);\r\n    };\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            className=\"search\"\r\n            sx={{ display: 'flex', justifyContent: 'center' }}\r\n        >\r\n            <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Search\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                onChange={handleChange}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport MUICard from '@mui/material/Card';\r\nimport { CardActionArea } from '@mui/material';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { getIdFromUrl } from '../../utils/helper';\r\n\r\nimport './Characters.scss';\r\n\r\ninterface CardItemsProps {\r\n    item: { name: string; url: string };\r\n}\r\n\r\nconst Card: React.FC<CardItemsProps> = ({ item }) => {\r\n    const navigate = useNavigate();\r\n    const id = getIdFromUrl(item.url);\r\n    const handleClick = (): void => {\r\n        navigate(`/character/${id}`, { replace: false });\r\n    };\r\n    return (\r\n        <MUICard className=\"card\" sx={{ borderRadius: '12px' }} onClick={handleClick}>\r\n            <CardActionArea>\r\n                <CardContent className=\"flex-center\" sx={{ flexDirection: 'column' }}>\r\n                    <div className=\"card-avatar\">\r\n                        <img\r\n                            src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\r\n                            alt={item.name}\r\n                            title={item.name}\r\n                        />\r\n                    </div>\r\n                    <Typography className=\"card-title\" mb={0} gutterBottom>\r\n                        {item.name}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </MUICard>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","const getIdFromUrl = (url: string): string => {\r\n    return url.replace(/[^0-9]/g, '');\r\n};\r\n\r\nexport { getIdFromUrl };\r\n","import React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst CardSkeleton: React.FC = () => {\r\n    const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    return (\r\n        <Box className=\"characters-skeleton\">\r\n            <Grid container spacing={2}>\r\n                {items.map((index) => {\r\n                    return (\r\n                        <Grid item key={index} xs={12} sm={6} md={3} lg={2.4}>\r\n                            <Skeleton\r\n                                variant=\"rectangular\"\r\n                                width=\"100%\"\r\n                                height={148}\r\n                                sx={{ borderRadius: '12px' }}\r\n                            />\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CardSkeleton;\r\n","import React from 'react';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { charactersSel } from '../../redux/characters';\r\n\r\nimport Card from './Card';\r\nimport CardSkeleton from './CardSkeleton';\r\n\r\nimport './Characters.scss';\r\n\r\nconst CharactersList = () => {\r\n    const isLoading = useAppSelector(charactersSel.selectLoading);\r\n    const characters = useAppSelector(charactersSel.selectCharacters);\r\n    return (\r\n        <Box className=\"characters-list\" minHeight=\"300\" my={[3, 4, 4, 8]}>\r\n            {isLoading || !characters ? (\r\n                <CardSkeleton />\r\n            ) : !characters.length ? (\r\n                <div className=\"characters-not-found\">No Characters Found...</div>\r\n            ) : (\r\n                <Grid container spacing={2}>\r\n                    {characters.map((item) => {\r\n                        return (\r\n                            <Grid item key={item.name} xs={12} sm={6} md={3} lg={2.4}>\r\n                                <Card item={item} />\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n                </Grid>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CharactersList;\r\n","import Pagination from './Pagination';\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport MUIPagination from '@mui/material/Pagination';\r\n\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { charactersSel } from '../../redux/characters';\r\n\r\nimport { CHARACTERS_LIST_PAGE_COUNT } from '../../constants/constants';\r\n\r\ninterface PaginationProps {\r\n    page: number;\r\n    callback: (p: number) => void;\r\n}\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({ page = 1, callback }) => {\r\n    const pageCount = useAppSelector(charactersSel.selectCount);\r\n\r\n    if (!pageCount) return null;\r\n\r\n    const handleChange = (event: React.ChangeEvent<unknown>, page: number) => {\r\n        callback(page);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <MUIPagination\r\n                page={page}\r\n                onChange={handleChange}\r\n                count={Math.ceil(pageCount / CHARACTERS_LIST_PAGE_COUNT)}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Container from '@mui/material/Container';\r\n\r\nimport { useAppDispatch } from '../../redux/hooks';\r\nimport { fetchCharacters } from '../../redux/characters/operations';\r\n\r\nimport Search from '../../components/Search/Search';\r\nimport CharactersList from './CharactersList';\r\nimport Pagination from '../../components/Pagination';\r\n\r\nconst Characters: React.FC = () => {\r\n    const [page, setPage] = useState(1);\r\n    const [search, setSearch] = useState('');\r\n    const dispatch = useAppDispatch();\r\n    useEffect((): void => {\r\n        dispatch(fetchCharacters({ page: page, search: search }));\r\n    }, [dispatch, page, search]);\r\n\r\n    const handleSearch = (term: string) => {\r\n        setSearch(term);\r\n        setPage(1);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Search callback={handleSearch} />\r\n            <CharactersList />\r\n            <Pagination page={page} callback={setPage} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Characters;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":["callback","Box","component","noValidate","autoComplete","className","sx","display","justifyContent","TextField","id","label","variant","color","onChange","event","clearTimeout","timerFunction","setTimeout","target","value","item","navigate","useNavigate","url","replace","borderRadius","onClick","CardActionArea","CardContent","flexDirection","src","alt","name","title","Typography","mb","gutterBottom","Grid","container","spacing","map","index","xs","sm","md","lg","Skeleton","width","height","isLoading","useAppSelector","charactersSel","characters","minHeight","my","length","page","pageCount","count","Math","ceil","CHARACTERS_LIST_PAGE_COUNT","useState","setPage","search","setSearch","dispatch","useAppDispatch","useEffect","fetchCharacters","Container","maxWidth","term","useDispatch","useSelector"],"sourceRoot":""}